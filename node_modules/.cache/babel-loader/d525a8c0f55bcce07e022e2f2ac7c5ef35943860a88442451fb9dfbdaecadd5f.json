{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prgma\\\\OneDrive\\\\Desktop\\\\teste-tecnico-repertorio\\\\src\\\\components\\\\DraftEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Paragraph from \"./Paragraph\";\nimport { Container, Button, Form } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraftEditor = () => {\n  _s();\n  const [paragraphs, setParagraphs] = useState([]);\n  const [text, setText] = useState(\"\");\n  const addParagraph = () => {\n    if (text.trim() === \"\") return;\n    setParagraphs([...paragraphs, {\n      id: Date.now(),\n      text\n    }]);\n    setText(\"\");\n  };\n  const saveDraft = () => {\n    // Aqui você pode simular o \"salvamento\" do rascunho\n    // Por exemplo, podemos logar os parágrafos no console ou mostrar um alerta\n    console.log(\"Rascunho salvo:\", paragraphs);\n    alert(\"Rascunho salvo com sucesso!\");\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-3\",\n      children: \"Editor de Reda\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 3,\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Digite seu par\\xE1grafo...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"mt-2\",\n      onClick: addParagraph,\n      children: \"Adicionar Par\\xE1grafo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      className: \"mt-2 ml-2\",\n      onClick: saveDraft,\n      children: \"Salvar Rascunho\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: paragraphs.map(p => /*#__PURE__*/_jsxDEV(Paragraph, {\n        text: p.text\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(DraftEditor, \"uX0giEYXidFFjJsmAo8ywuXOL1w=\");\n_c = DraftEditor;\nexport default DraftEditor;\nvar _c;\n$RefreshReg$(_c, \"DraftEditor\");","map":{"version":3,"names":["React","useState","Paragraph","Container","Button","Form","jsxDEV","_jsxDEV","DraftEditor","_s","paragraphs","setParagraphs","text","setText","addParagraph","trim","id","Date","now","saveDraft","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","Control","as","rows","value","onChange","e","target","placeholder","variant","onClick","map","p","_c","$RefreshReg$"],"sources":["C:/Users/prgma/OneDrive/Desktop/teste-tecnico-repertorio/src/components/DraftEditor.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Paragraph from \"./Paragraph\";\r\nimport { Container, Button, Form } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst DraftEditor = () => {\r\n  const [paragraphs, setParagraphs] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const addParagraph = () => {\r\n    if (text.trim() === \"\") return;\r\n    setParagraphs([...paragraphs, { id: Date.now(), text }]);\r\n    setText(\"\");\r\n  };\r\n\r\n  const saveDraft = () => {\r\n    // Aqui você pode simular o \"salvamento\" do rascunho\r\n    // Por exemplo, podemos logar os parágrafos no console ou mostrar um alerta\r\n    console.log(\"Rascunho salvo:\", paragraphs);\r\n    alert(\"Rascunho salvo com sucesso!\");\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <h2 className=\"mb-3\">Editor de Redação</h2>\r\n      \r\n      <Form.Group>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={3}\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          placeholder=\"Digite seu parágrafo...\"\r\n        />\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" className=\"mt-2\" onClick={addParagraph}>\r\n        Adicionar Parágrafo\r\n      </Button>\r\n\r\n      {/* Botão para salvar o rascunho */}\r\n      <Button variant=\"success\" className=\"mt-2 ml-2\" onClick={saveDraft}>\r\n        Salvar Rascunho\r\n      </Button>\r\n\r\n      <div className=\"mt-4\">\r\n        {paragraphs.map((p) => (\r\n          <Paragraph key={p.id} text={p.text} />\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DraftEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}